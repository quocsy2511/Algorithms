// ƒë·ªÅ l√† ki·ªÉm tra xem s·ªë ƒë√≥ c√≥ ph·∫£i l√† s·ªë nguy√™n hay kh√¥ng

// note -> s·ªë nguy√™n l√† s·ªë l·ªõn h∆°n 1 l√† ch·ªâ chia h·∫øt cho ch√≠nh n√≥

const isPrimeNumber = (n) => {
  if (n < 2) return false;

  //   for (let i = 2; i < n; i++) {
  //     if (n % i === 0) return false;
  //   }

  // tuy nhi√™n c√≥ 1 ƒë·ªãnh nghƒ©a l√† n·∫øu 1 s·ªë n = a * b th√¨ 1 trong 2 s·ªë s·∫Ω b√© h·ªõn cƒÉn b·∫≠c 2 c·ªßa n vd 24 =4*6 th√¨ cƒÉn b·∫≠c 2 c·ªßa 24 l√† 4.8 > 4
  // v·∫≠y l√∫c n√†y v√≠ d·ª• nh∆∞ ta n = 100 th√¨ v·ªõi v√≤ng for m·ªõi  n√≥ s·∫Ω ch·∫°y 10 l·∫ßn nhanh g·∫•p 10 l·∫ßn
  // sqrt l√† cƒÉn b·∫≠c 2

  for (let i = 2; i < Math.sqrt(n); i++) {
    if (n % i === 0) return false;
  }

  return true;
};
console.log("üöÄ ~ isPrimeNumber ~ isPrimeNumber:", isPrimeNumber(1)); //false
console.log("üöÄ ~ isPrimeNumber ~ isPrimeNumber:", isPrimeNumber(10)); //false
console.log("üöÄ ~ isPrimeNumber ~ isPrimeNumber:", isPrimeNumber(5)); //true

//Big-0 = O(sqrt(n) ƒë·ªô ph·ª©c t·∫°p c·ªßa h√†m n√†y
